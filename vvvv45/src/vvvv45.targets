<?xml version="1.0" encoding="utf-8" ?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask AssemblyFile="$(MSBuildThisFileDirectory)\..\..\tools\VersionInfo.exe" TaskName="VVVV.Tools.MSBuild.GetVersionInfo" />
  <UsingTask AssemblyFile="$(MSBuildThisFileDirectory)\..\..\tools\VersionInfo.exe" TaskName="VVVV.Tools.MSBuild.GetPlatformFromBinary" />

  <!-- VVVV_VersionInfo -->
  <Target Name="VVVV_VersionInfo">
    <GetVersionInfo File="$(VVVVExe)">
      <Output TaskParameter="ReturnValue" PropertyName="VVVV_VersionInfo" />
    </GetVersionInfo>
    <GetPlatformFromBinary File="$(VVVVExe)">
      <Output TaskParameter="ReturnValue" PropertyName="VVVV_Platform" />
    </GetPlatformFromBinary>
    <PropertyGroup>
      <VVVV_VersionAndPlatform>$(VVVV_VersionInfo)_$(VVVV_Platform)</VVVV_VersionAndPlatform>
    </PropertyGroup>
  </Target>

  <!-- Generates all the filenames used by the Build, Deploy and Zip tasks -->
  <Target Name="VVVV_GenerateFileNames" DependsOnTargets="VVVV_VersionInfo">
    <PropertyGroup>
      <CoreDir>$(RootDir)lib\core\</CoreDir>
      <CommonDir>$(RootDir)..\common\</CommonDir>
      <PluginsDir>$(RootDir)lib\nodes\plugins\</PluginsDir>
      <EditorsDir>$(RootDir)lib\nodes\editors\</EditorsDir>
      <DeployName>$(DeployPrefix)_$(VVVV_VersionAndPlatform)</DeployName>
      <DeployDir Condition="'$(DeployDir)' == ''">$(DeployBaseDir)$(DeployName)\</DeployDir>
      <DeployedVVVVExe>$(DeployDir)vvvv.exe</DeployedVVVVExe>
      <ZipFileName>$(DeployBaseDir)$(DeployName).zip</ZipFileName>
    </PropertyGroup>
  </Target>

  <!-- Build -->
  <Target Name="VVVV_Build" DependsOnTargets="VVVV_GenerateFileNames" AfterTargets="Build">
    <!-- Copy shared dependencies to lib/core -->
    <ItemGroup>
      <_SharedDependencies_ Include="$(PluginsDir)Sanford*" />
      <_SharedDependencies_ Include="$(CommonDir)src\thirdparty\*" />
    </ItemGroup>
    <Copy SourceFiles="@(_SharedDependencies_)" DestinationFolder="$(CoreDir)" />
    <!-- Delete all files which are already in lib/core -->
    <CreateItem Include="$(CoreDir)**\*.*">
      <Output TaskParameter="Include" ItemName="CoreFiles" />
    </CreateItem>
    <Delete Files="@(CoreFiles->'$(PluginsDir)%(RecursiveDir)%(Filename)%(Extension)')" />
    <Delete Files="@(CoreFiles->'$(EditorsDir)%(RecursiveDir)%(Filename)%(Extension)')" />
    <!-- Create lib/*.dtd file -->
    <ItemGroup>
      <DTDFiles Include="$(RootDir)lib\*.dtd" />
    </ItemGroup>
    <Delete Files="@(DTDFiles)" />
    <Copy SourceFiles="$(MSBuildThisFileDirectory)vvvv45.dtd" DestinationFiles="$(RootDir)lib\$(VVVV_VersionInfo).dtd" />
    <Copy SourceFiles="$(OutputPath)vvvv45.exe.config" DestinationFiles="$(OutputPath)..\..\vvvv.exe.config" SkipUnchangedFiles="true" />
    <ItemGroup>
      <DummyFiles Include="$(OutputPath)vvvv45.*" />
    </ItemGroup>
    <Delete Files="@(DummyFiles)" />
  </Target>
  
  <!-- Deploy -->
  <Target Name="VVVV_Deploy" DependsOnTargets="VVVV_GenerateFileNames;VVVV_Build" AfterTargets="Build" Condition=" '$(Configuration)' == 'Deploy' ">
    <!-- Let's not remove the directory since BuildAndInstallVLIntegration installed its packages there. -->
    <!--<RemoveDir Directories="$(DeployDir)" />-->
    <Message Text="Deploying to $(DeployDir)" Importance="High" />
    <!-- Copy files to deploy directory (public/build/vvvv_VERSION) -->
    <CreateItem Include="$(DeployInclude)" Exclude="$(DeployExclude)">
      <Output ItemName="FilesToDeploy" TaskParameter="Include" />
    </CreateItem>
    <Copy SourceFiles="@(FilesToDeploy)"
          DestinationFiles="@(FilesToDeploy->'$(DeployDir)%(RecursiveDir)%(Filename)%(Extension)')" 
          SkipUnchangedFiles="true" 
          OverwriteReadOnlyFiles="true" 
          ContinueOnError="true" />
    <!-- Set read-only flags -->
    <CombinePath BasePath="$(DeployDir)" Paths="$(DeployReadOnlyFiles)">
      <Output TaskParameter="CombinedPaths" ItemName="_DeployReadOnlyFiles"/>
    </CombinePath>
    <Exec Command="attrib +R &quot;%(_DeployReadOnlyFiles.Identity)&quot; /S /D" />
    <!-- Set hidden flags -->
    <CombinePath BasePath="$(DeployDir)" Paths="$(DeployHiddenFiles)">
      <Output TaskParameter="CombinedPaths" ItemName="_DeployHiddenFiles" />
    </CombinePath>
    <Exec Command="attrib +H &quot;%(_DeployHiddenFiles.Identity)&quot;" />
  </Target>

  <Target Name="GenerateNodeList" AfterTargets="VVVV_Deploy" Condition=" '$(Configuration)' == 'Deploy' AND '$(DeployGenerateNodeList)' == 'true' ">    
    <!-- /dx9ex flag fixes crash on build server, see: http://msdn.microsoft.com/en-us/library/windows/desktop/ff471598%28v=vs.85%29.aspx -->
    <!-- Call /nodelist without any arguments to include native nodes -->
    <Exec Condition="Exists('$(DeployedVVVVExe)')"
          Command="&quot;$(DeployedVVVVExe)&quot; /allowmultiple /nodelist" />
    <!-- Call /nodelist with arguments to filter for specific directory -->
    <Exec Condition="!Exists('$(DeployedVVVVExe)')" 
          Command="&quot;$(VVVVExe)&quot; /allowmultiple /nodelist &quot;$(DeployDir)lib\nodes&quot;" />
    <!-- Generate a nodelist.xml file for each VL integration pack -->
    <PropertyGroup>
      <_InternalPacksDirectory>$(DeployDir)lib\packs</_InternalPacksDirectory>
    </PropertyGroup>
    <ItemGroup>
      <_VLPacksDirectories Condition="Exists('$(_InternalPacksDirectory)')" 
                           Include="$([System.IO.Directory]::GetDirectories(&quot;$(_InternalPacksDirectory)&quot;, &quot;VL.*&quot;))" />
    </ItemGroup>
    <Exec Condition="Exists('$(DeployedVVVVExe)') AND Exists('$(_InternalPacksDirectory)') AND Exists('%(_VLPacksDirectories.Identity)\vvvv\nodes') AND !Exists('%(_VLPacksDirectories.Identity)\vvvv\nodes\nodelist.ignore')"
          Command="&quot;$(DeployedVVVVExe)&quot; /allowmultiple /nodelist &quot;%(_VLPacksDirectories.Identity)\vvvv\nodes&quot;" />
  </Target>
  
  <!-- Zip -->
  <Target Name="Zip" DependsOnTargets="VVVV_GenerateFileNames">
    <Message Text="Generating $(ZipFileName)" Importance="High" />
    <Delete Files="$(ZipFileName)" />
    <!-- Because of http://msbuildtasks.tigris.org/issues/show_bug.cgi?id=148 we switched to cmd line call to 7-Zip. -->
    <Exec Command="&quot;$(SevenZip)&quot; a -r &quot;$(ZipFileName)&quot; &quot;$(DeployDir)&quot;" />
    <!--
    <CreateItem Include="$(ZipTempDir)\**\*.*">
      <Output ItemName="ZipFiles" TaskParameter="Include" />
    </CreateItem>
    <Zip Files="@(ZipFiles)" 
         WorkingDirectory="$(TempBaseDir)" 
         ZipFileName="$(ZipFileName)" 
         ZipLevel="9" />
    -->
  </Target>
</Project>
