<!DOCTYPE PATCH  SYSTEM "http://vvvv.org/versions/vvvv40beta20.1.dtd" >
   <PATCH nodename="C:\Users\Elias\vvvv_plugins_trunk\plugins\VVVV\CSharp\CSharp (VVVV CompileRun) help.v4p">
   <BOUNDS height="12315" left="4095" top="2220" type="Window" width="21060">
   </BOUNDS>
   <NODE componentmode="Hidden" id="28" nodename=":PLUGINS:\CSharpAssembly.dll|VVVV.Nodes.PluginTemplate">
   <BOUNDS height="270" left="8595" top="8235" type="Node" width="11175">
   </BOUNDS>
   <BOUNDS height="0" left="10050" top="6405" type="Window" width="0">
   </BOUNDS>
   <BOUNDS height="0" left="8595" top="8235" type="Box" width="0">
   </BOUNDS>
   <PIN pinname="Compile" visible="1">
   </PIN>
   <PIN pinname="Errors" visible="1">
   </PIN>
   <PIN pinname="Code" visible="1">
   </PIN>
   <PIN pinname="References" visible="1" slicecount="4" values="System,System.Windows.Forms,_PluginInterfaces,_Utils">
   </PIN>
   <PIN pinname="A" slicecount="1" values="2.3">
   </PIN>
   <PIN pinname="B" slicecount="1" values="1.5">
   </PIN>
   </NODE>
   <NODE id="27" nodename="Reader (File)">
   <BOUNDS height="0" left="9255" top="990" type="Node" width="0">
   </BOUNDS>
   <PIN pinname="Filename" slicecount="1" values="class.cs">
   </PIN>
   <PIN pinname="Do Read" visible="1">
   </PIN>
   <PIN pinname="Content" visible="1">
   </PIN>
   </NODE>
   <NODE id="26" nodename="OnOpen (VVVV)">
   <BOUNDS height="0" left="9870" top="345" type="Node" width="0">
   </BOUNDS>
   <PIN pinname="Bang" visible="1">
   </PIN>
   </NODE>
   <NODE componentmode="InABox" id="25" nodename="IOBox (String)">
   <BOUNDS height="0" left="75" top="15" type="Node" width="0">
   </BOUNDS>
   <BOUNDS height="160" left="5550" top="8220" type="Window" width="215">
   </BOUNDS>
   <BOUNDS height="11700" left="75" top="15" type="Box" width="8130">
   </BOUNDS>
   <PIN pinname="Input String" visible="1">
   </PIN>
   <PIN pinname="Character Encoding" slicecount="1" values="UTF8">
   </PIN>
   <PIN pinname="Size" slicecount="1" values="8">
   </PIN>
   <PIN pinname="Font" slicecount="1" values="|Lucida Console|">
   </PIN>
   <PIN pinname="Rows" slicecount="1" values="72">
   </PIN>
   <PIN pinname="Show Grid" slicecount="1" values="0">
   </PIN>
   <PIN pinname="Output String" visible="1">
   </PIN>
   <PIN pinname="Show SliceIndex" slicecount="1" values="1">
   </PIN>
   <PIN pinname="SliceOffset" slicecount="1" values="1">
   </PIN>
   </NODE>
   <NODE componentmode="InABox" id="24" nodename="IOBox (String)">
   <BOUNDS height="0" left="9555" top="9435" type="Node" width="0">
   </BOUNDS>
   <BOUNDS height="160" left="5850" top="8520" type="Window" width="215">
   </BOUNDS>
   <BOUNDS height="2460" left="9555" top="9435" type="Box" width="11370">
   </BOUNDS>
   <PIN pinname="Input String" visible="1">
   </PIN>
   <PIN pinname="Character Encoding" slicecount="1" values="ANSI">
   </PIN>
   </NODE>
   <LINK dstnodeid="24" dstpinname="Input String" srcnodeid="28" srcpinname="Errors">
   </LINK>
   <NODE componentmode="InABox" id="16" nodename="IOBox (Value Advanced)">
   <BOUNDS height="0" left="19020" top="6960" type="Node" width="0">
   </BOUNDS>
   <BOUNDS height="160" left="8636" top="8397" type="Window" width="215">
   </BOUNDS>
   <BOUNDS height="675" left="19020" top="6960" type="Box" width="765">
   </BOUNDS>
   <PIN pinname="Slider Behavior" slicecount="1" values="Bang">
   </PIN>
   <PIN pinname="Show Value" slicecount="1" values="0">
   </PIN>
   <PIN pinname="Show Slider" slicecount="1" values="1">
   </PIN>
   <PIN pinname="X Input Value" slicecount="1" values="0">
   </PIN>
   <PIN pinname="Y Input Value" slicecount="1" values="0">
   </PIN>
   <PIN pinname="Minimum" slicecount="1" values="0">
   </PIN>
   <PIN pinname="Maximum" slicecount="1" values="1">
   </PIN>
   <PIN pinname="Y Output Value" visible="1">
   </PIN>
   <PIN pinname="Descriptive Name" slicecount="1" values="Compile">
   </PIN>
   </NODE>
   <LINK dstnodeid="28" dstpinname="Compile" srcnodeid="16" srcpinname="Y Output Value">
   </LINK>
   <NODE componentmode="InAWindow" id="1" nodename="Renderer (TTY)">
   <BOUNDS height="0" left="19575" top="6150" type="Node" width="0">
   </BOUNDS>
   <BOUNDS height="4125" left="270" top="12585" type="Window" width="21780">
   </BOUNDS>
   <BOUNDS height="1800" left="19575" top="6150" type="Box" width="2400">
   </BOUNDS>
   </NODE>
   <NODE id="5" nodename="Separate (String)">
   <PIN pinname="Output" visible="1">
   </PIN>
   <PIN pinname="Input" visible="1">
   </PIN>
   <BOUNDS type="Node" height="0" left="9270" top="1635" width="0">
   </BOUNDS>
   <PIN pinname="Intersperse" slicecount="1" values="NewLineAutoDetection">
   </PIN>
   <PIN pinname="Ignore between" slicecount="1" values="None">
   </PIN>
   </NODE>
   <NODE nodename="Writer (File)" componentmode="Hidden" id="29" hiddenwhenlocked="0" managers="">
   <BOUNDS type="Node" left="8400" top="10275" width="0" height="0">
   </BOUNDS>
   <PIN pinname="Descriptive Name" pintype="Configuration" slicecount="1" values="||">
   </PIN>
   <PIN pinname="Filename" pintype="Input" visible="1" slicecount="1" values="class.cs">
   </PIN>
   <PIN pinname="doWrite" pintype="Input" visible="1" slicecount="1" values="0">
   </PIN>
   <PIN pinname="Append" pintype="Input" visible="1" slicecount="1" values="0">
   </PIN>
   <PIN pinname="Content" pintype="Input" visible="1" slicecount="1" values="|/*&cr;&lf; * Erstellt mit SharpDevelop.&cr;&lf; * Benutzer: gregsn&cr;&lf; * Datum: 28.11.2008&cr;&lf; * Zeit: 22:14&cr;&lf; */&cr;&lf;&cr;&lf;using System;&cr;&lf;using VVVV.PluginInterfaces.V1;&cr;&lf;using VVVV.Utils.VColor;&cr;&lf;using VVVV.Utils.VMath;&cr;&lf;&cr;&lf;namespace VVVV.Nodes&cr;&lf;{&cr;&lf;  /// &lt;summary&gt;&cr;&lf;  /// my first node!!&cr;&lf;  /// &lt;/summary&gt;&cr;&lf;&cr;&lf;  public class DynamicNode //: IPlugin, IDisposable&cr;&lf;  {&cr;&lf;      #region field declaration&cr;&lf;     &tab;&cr;&lf;      //the host (mandatory)&cr;&lf;      private IPluginHost FHost; &cr;&lf;    &tab;&cr;&lf;      //input pin declaration&cr;&lf;      private IValueIn FInput1;&cr;&lf;      private IValueIn FInput2;&cr;&lf;      &cr;&lf;    &tab;&cr;&lf;      //output pin declaration&cr;&lf;      private IValueOut FOutput;&cr;&lf;      &cr;&lf;    &tab;&cr;&lf;      #endregion field declaration&cr;&lf;&cr;&lf;      public DynamicNode()&cr;&lf;      {&cr;&lf;          //System.Windows.Forms.MessageBox.Show(&quot;hello&quot;);&cr;&lf;      }&cr;&lf;&tab;&tab;&cr;&lf;      public void SetPluginHost(IPluginHost Host)&cr;&lf;      {&cr;&lf;          //assign host&cr;&lf;          FHost = Host;&cr;&lf;&tab;    &tab;&cr;&lf;          FHost.CreateValueInput(&quot;A&quot;, 1, null, TSliceMode.Dynamic, &cr;&lf;              TPinVisibility.True, out FInput1);&cr;&lf;          FInput1.SetSubType(-10, 10, 0.1, 0, false, false, false);&cr;&lf;          &cr;&lf;          FHost.CreateValueInput(&quot;B&quot;, 1, null, TSliceMode.Dynamic, &cr;&lf;              TPinVisibility.True, out FInput2);&cr;&lf;          FInput2.SetSubType(-10, 10, 0.1, 0, false, false, false);&cr;&lf;          &cr;&lf;          FHost.CreateValueOutput(&quot;C&quot;, 1, null, TSliceMode.Dynamic, &cr;&lf;              TPinVisibility.True, out FOutput);&cr;&lf;          FOutput.SetSubType(-10, 10, 0.1, 0, false, false, false);&tab;&cr;&lf;      }&cr;&lf;&tab;&tab;&cr;&lf;      public void Evaluate(int SpreadMax)&cr;&lf;      {     &tab;&cr;&lf;          FOutput.SliceCount = 1;&cr;&lf;          &cr;&lf;          double a, b;&cr;&lf;          &cr;&lf;          FInput1.GetValue(0, out a); FInput2.GetValue(0, out b);&cr;&lf;          FOutput.SetValue(0, a+b );&cr;&lf;          &cr;&lf;          &cr;&lf;          &cr;&lf;          &tab;&cr;&lf;      }&tab;&tab;&cr;&lf;  }&cr;&lf;}&cr;&lf;|">
   </PIN>
   <PIN pinname="ID" pintype="Output" visible="-1">
   </PIN>
   </NODE>
   <LINK srcnodeid="27" srcpinname="Content" dstnodeid="5" dstpinname="Input">
   </LINK>
   <LINK srcnodeid="5" srcpinname="Output" dstnodeid="25" dstpinname="Input String">
   </LINK>
   <LINK srcnodeid="26" srcpinname="Bang" dstnodeid="27" dstpinname="Do Read">
   </LINK>
   <LINK srcnodeid="27" srcpinname="Content" dstnodeid="28" dstpinname="Code">
   </LINK>
   </PATCH>